language: python
cache:
  pip: true
  directories:
    - wayland_dl

python:
  - 2.7
  - 3.3
  - 3.4
  - 3.5
  - pypy
  - nightly

matrix:
  include:
    - python: 2.7
      env: TEST=pep8 WAYLAND_VERSION=1.10.0 WAYLAND_PROTOCOLS=1.4
    - python: 3.5
      env: TEST=pep8 WAYLAND_VERSION=1.10.0 WAYLAND_PROTOCOLS=1.4
    - python: 3.5
      env: TEST=docs WAYLAND_VERSION=1.10.0 WAYLAND_PROTOCOLS=1.4
  allow_failures:
    - python: pypy
    - python: nightly

env:
  global:
    - CPATH="${HOME}/wayland/include"
    - LD_LIBRARY_PATH="${HOME}/wayland/lib"
    - LIBRARY_PATH="${HOME}/wayland/lib"
    - PKG_CONFIG_PATH="${HOME}/wayland/share/pkgconfig:${HOME}/wayland/lib/pkgconfig"
    - XDG_RUNTIME_DIR="/tmp"
    - WAYLAND_URL='http://wayland.freedesktop.org/releases/wayland-${WAYLAND_VERSION}.tar.xz'
    - WAYLAND_PROTOCOLS_URL='http://wayland.freedesktop.org/releases/wayland-protocols-${WAYLAND_PROTOCOLS}.tar.xz'
  matrix:
    - WAYLAND_VERSION=1.11.0 WAYLAND_PROTOCOLS=1.7
    - WAYLAND_VERSION=1.11.91 WAYLAND_PROTOCOLS=1.7

install:
  - WAYLAND_URL=`echo $WAYLAND_URL | envsubst`
  - WAYLAND_PROTOCOLS_URL=`echo $WAYLAND_PROTOCOLS_URL | envsubst`
  - if [[ ! -f wayland_dl/wayland-${WAYLAND_VERSION}.tar.xz ]]; then
        wget --no-check-certificate -P wayland_dl $WAYLAND_URL;
    fi
  - if [[ ! -f wayland_dl/wayland-protocols-${WAYLAND_PROTOCOLS_VERSION}.tar.xz ]]; then
        wget --no-check-certificate -P wayland_dl $WAYLAND_PROTOCOLS_URL;
    fi
# build Wayland
  - tar -xJf wayland_dl/wayland-${WAYLAND_VERSION}.tar.xz
  - pushd wayland-${WAYLAND_VERSION}
  - ./configure --disable-documentation --prefix=${HOME}/wayland
  - make
  - make install
  - popd
# build Wayland-protocols
  - tar -xJf wayland_dl/wayland-protocols-${WAYLAND_PROTOCOLS}.tar.xz
  - pushd wayland-protocols-${WAYLAND_PROTOCOLS}
  - ./configure --prefix=${HOME}/wayland
  - make
  - make install
  - popd
# install necessary packages
  - pip install -r requirements.txt;
  - python pywayland/ffi_build.py;
  - python -m pywayland.scanner --with-protocols;
  - if [[ $TEST == pep8 ]]; then
        pip install flake8;
    elif [[ $TEST == docs ]]; then
        pip install -r doc/requirements.txt;
    else
        pip install -r requirements-dev.txt;
    fi

script:
  - if [[ $TEST == pep8 ]]; then
        flake8 pywayland example test;
    elif [[ $TEST == docs ]]; then
        sphinx-build -W -b html doc doc/_build/html;
    else
        py.test --cov pywayland --cov-report term-missing;
    fi

after_success:
  - if [[ -z $TEST ]]; then coveralls; fi
